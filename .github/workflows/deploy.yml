name: 🚀 Deploy ment-notification para EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🏗 Build do JAR usando Maven
        run: |
          mvn clean package -DskipTests

      - name: 📝 Preparar chave SSH
        run: |
          mkdir -p ~/.ssh
          cat << 'EOF' > ~/.ssh/id_rsa
          ${{ secrets.EC2_SSH_KEY }}
          EOF
          chmod 600 ~/.ssh/id_rsa

      - name: 🔐 Adicionar host ao known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 📦 Enviar JAR e Dockerfile para EC2
        run: |
          scp -P ${{ secrets.EC2_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            target/ment-notification.jar \
            Dockerfile \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user/ment-notification/

      - name: 🚀 Deploy no EC2
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.EC2_PORT }} -o StrictHostKeyChecking=no \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ec2-user/ment-notification
            # Build da imagem Docker
            docker build -t ment-notification .
            
            # Parar container antigo se existir
            if [ $(docker ps -q -f name=ment-notification) ]; then
              docker stop ment-notification
              docker rm ment-notification
            fi

            # Rodar o container
            docker run -d --name ment-notification -p 8081:8080 ment-notification
          EOF
